FROM ghcr.io/foliant-docs/foliant/foliant:pandoc

RUN apt update

RUN apt install --reinstall ca-certificates

COPY ./dependency_files/ /usr/src/app/dependency_files/

# Needed for ImageMagick
RUN apt install -y inkscape

RUN rm -rf /etc/ImageMagick-6/policy.xml \
    && cp /usr/src/app/dependency_files/imagemagick/policy.xml /etc/ImageMagick-6/

# Needed for Puppeteer
RUN apt install -y libasound2

RUN wget -q -O - https://deb.nodesource.com/setup_18.x | bash

RUN apt install -y nodejs

RUN npm install -g puppeteer

# Needed for BPMN preprocessor

RUN npm install -g bpmn-to-image@0.5.1 --unsafe-perm

# Needed for Argdown preprocessor

RUN npm install -g @argdown/cli
RUN npm install -g @argdown/image-export --unsafe-perm

#######################
# Databases for DBDoc #
#######################

# MS SQL Server
RUN apt-get install -y unixodbc-dev
RUN wget -qO- https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN wget -O /etc/apt/sources.list.d/mssql-release.list https://packages.microsoft.com/config/ubuntu/20.04/prod.list
RUN apt-get update
RUN ACCEPT_EULA=Y apt-get install -y msodbcsql17

# MySQL
RUN apt-get install -y mysql-server libmysqlclient-dev

#######################

RUN npm install -g widdershins

RUN npm install -g mermaid \
    && npm install -g mermaid.cli --unsafe-perm=true --allow-root

RUN npm install -g aglio --unsafe-perm=true --allow-root

RUN npm install -g md-to-pdf --unsafe-perm=true --allow-root

RUN npm install -g raml2html raml2html-full-markdown-theme

RUN mkdir -p /usr/src/app/dependency_files/slate/ \
    && cd /usr/src/app/dependency_files/slate/ \
    && wget -O ./Gemfile https://raw.githubusercontent.com/slatedocs/slate/main/Gemfile \
    && wget -O ./Gemfile.lock https://raw.githubusercontent.com/slatedocs/slate/main/Gemfile.lock \
    && apt install -y zlib1g-dev ruby-full \
    && gem install bundler -v 2.4.22 \
    && bundle install

# Needed for Confluence backend
RUN apt install -y libkrb5-dev

RUN apt install -y graphviz libgraphviz-dev

RUN apt install -y plantuml && wget -O /usr/share/plantuml/plantuml.jar http://sourceforge.net/projects/plantuml/files/plantuml.jar/download

RUN pip3 install --upgrade pip

RUN cd /usr/src/app/dependency_files/python_packages/ \
    && pip3 install -r ./requirements.txt \
    && pip3 install --no-compile -r ./requirements_no_compile.txt

ENV PLANTUML_LIMIT_SIZE 100000

WORKDIR /usr/src/app/
